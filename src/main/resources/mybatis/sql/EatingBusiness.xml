<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="EatingBusiness">

    <select id="EatingBusiness.selectEatingBusinessList" parameterType="EatingBusiness" resultType="EatingBusiness">
        <!-- 회원 정보 목록 조회 -->
        SELECT
            A.SEQ                           seq
            ,A.GROUP_CODE                    groupCode
            ,A.GROUP_TYPE                   groupType
            ,A.LAST_DATE                    lastDate
            ,A.NOW_DATE                     nowDate
            ,A.LAST_RATE                    lastRate
            ,A.NOW_RATE                     nowRate
            ,A.FOOD_TYPE                    foodType
            ,A.CREATEID                     createid
            ,A.CREATEDATE                   createdate
            ,A.UPDATEID                     updateid
            ,A.UPDATEDATE                   updatedate
        FROM EATING_BUSINESS A
        WHERE 1=1
        <if test="groupCode != null">
            AND A.GROUP_CODE = #{groupCode}
        </if>
        <if test="groupType != null">
            AND A.GROUP_TYPE = #{groupType}
        </if>
        ORDER BY A.GROUP_CODE DESC, A.SEQ ASC
    </select>

    <select id="EatingBusiness.selectEatingBusinessGroupCode" resultType="int">
        SELECT NVL(MAX(GROUP_CODE),0)+1
        FROM EATING_BUSINESS
    </select>

    <select id="EatingBusiness.selectEatingBusinessTop" resultType="EatingBusiness">
        <![CDATA[
        SELECT
            B.GROUP_CODE          groupCode
        FROM
        (
            SELECT
                A.GROUP_CODE
            FROM EATING_BUSINESS A
            GROUP BY A.GROUP_CODE
            ORDER BY A.GROUP_CODE DESC
        ) B
        WHERE ROWNUM = 1
        ]]>
    </select>

    <insert id="EatingBusiness.insertEatingBusiness" parameterType="EatingBusiness">
        INSERT INTO EATING_BUSINESS
        (
            GROUP_CODE
            ,GROUP_TYPE
            ,LAST_DATE
            ,NOW_DATE
            ,LAST_RATE
            ,NOW_RATE
            ,FOOD_TYPE
            ,CREATEID
            ,CREATEDATE
        ) VALUES
        (
            #{groupCode}
            ,#{groupType}
            ,#{lastDate}
            ,#{nowDate}
            ,#{lastRate}
            ,#{nowRate}
            ,#{foodType}
            ,#{createid}
            ,to_char(sysdate, 'YYYY-MM-DD HH24:MI:SS')
        )
    </insert>

    <update id="EatingBusiness.updateEatingBusiness" parameterType="EatingBusiness">
        UPDATE EATING_BUSINESS SET
            updatedate = to_char(sysdate, 'YYYY-MM-DD HH24:MI:SS') ,
            updateid = #{updateid} ,
        <trim suffixOverrides=",">
            <if test="lastDate != null">LAST_DATE = #{lastDate},</if>
            <if test="nowDate != null">NOW_DATE = #{nowDate},</if>
            <if test="lastRate != null">LAST_RATE = #{lastRate},</if>
            <if test="nowRate != null">NOW_RATE = #{nowRate},</if>
            <if test="foodType != null">FOOD_TYPE = #{foodType},</if>
        </trim>
        <trim prefix="WHERE" prefixOverrides="AND | OR">
            <if test="groupCode != null"> GROUP_CODE = #{groupCode}</if>
            <if test="groupType != null">AND GROUP_TYPE = #{groupType}</if>
            <if test="seq != null">AND SEQ = #{seq}</if>
        </trim>
    </update>

    <select id="EatingBusiness.selectEatingBusinessComment" parameterType="EatingBusiness" resultType="EatingBusiness">
        SELECT
        A.SEQ                           seq
        ,A.GROUP_CODE                    groupCode
        ,A.TITLE                        title
        ,A.MEMO1                        memo1
        ,A.MEMO2                        memo2
        ,A.MEMO1_TITLE                  memo1Title
        ,A.MEMO2_TITLE                  memo2Title
        ,A.CREATEID                     createid
        ,A.CREATEDATE                   createdate
        ,A.UPDATEID                     updateid
        ,A.UPDATEDATE                   updatedate
        FROM EATING_BUSINESS_COMMENT A
        WHERE 1=1
        <if test="groupCode != null">
            AND A.GROUP_CODE = #{groupCode}
        </if>
        <if test="title != null">
            AND A.TITLE LIKE CONCAT(CONCAT('%', #{title}), '%')
        </if>
        ORDER BY A.GROUP_CODE DESC, A.SEQ ASC
    </select>

    <insert id="EatingBusiness.insertEatingBusinessComment" parameterType="EatingBusiness">
        INSERT INTO EATING_BUSINESS_COMMENT
        (
            GROUP_CODE
            ,TITLE
            ,MEMO1
            ,MEMO2
            ,MEMO1_TITLE
            ,MEMO2_TITLE
            ,CREATEID
            ,CREATEDATE
        ) VALUES
        (
        #{groupCode}
        ,#{title}
        ,#{memo1}
        ,#{memo2}
        ,#{memo1Title}
        ,#{memo2Title}
        ,#{createid}
        ,to_char(sysdate, 'YYYY-MM-DD HH24:MI:SS')
        )
    </insert>

    <update id="EatingBusiness.updateEatingBusinessComment" parameterType="EatingBusiness">
        UPDATE EATING_BUSINESS_COMMENT SET
        updatedate = to_char(sysdate, 'YYYY-MM-DD HH24:MI:SS') ,
        updateid = #{updateid} ,
        <trim suffixOverrides=",">
            <if test="title != null">TITLE = #{title},</if>
            <if test="memo1 != null">MEMO1 = #{memo1},</if>
            <if test="memo2 != null">MEMO2 = #{memo2},</if>
            <if test="memo1Title != null">MEMO1_TITLE = #{memo1Title},</if>
            <if test="memo2Title != null">MEMO2_TITLE = #{memo2Title},</if>
        </trim>
        <trim prefix="WHERE" prefixOverrides="AND | OR">
            <if test="groupCode != null"> GROUP_CODE = #{groupCode}</if>
        </trim>
    </update>

    <update id="EatingBusiness.deleteEatingBusiness" parameterType="EatingBusiness">
        DELETE FROM EATING_BUSINESS_COMMENT
        WHERE SEQ = #{seq}
    </update>

</mapper>
